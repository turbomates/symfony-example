# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true      # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
    bind:
      Symfony\Component\Messenger\Transport\TransportInterface $messageBus: '@messenger.transport.event.sync'

  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  Flight\:
    resource: '../src/Flight/*'
    exclude: '../src/Flight/{DependencyInjection,Entity,Lib,Migrations,Tests,Kernel.php}'

  # controllers are imported separately to make sure services can be injected
  # as action arguments even if you don't extend any base controller class
  # remove on prod structure
  Flight\Api\Controller\:
    resource: '../src/Flight/Api/Controller/*Controller.php'
    tags: ['controller.service_arguments']

  # add more service definitions when explicit configuration is needed
  # please note that last definitions always *replace* previous ones
  Lib\HttpFoundation\JsonValueResolver:
    arguments:
      - '@serializer'
    tags:
      - { name: controller.argument_value_resolver, priority: 50 }

  Lib\HttpFoundation\ResponseJsonListener:
    arguments:
      - '@serializer'
    tags:
      - {name: kernel.event_subscriber}

  Lib\Messenger\DoctrineMiddleware:
    arguments:
      - '@messenger.transport.doctrine'
      - '@doctrine'

  Lib\QueryObject\QueryExecutor:
    arguments:
      - '@doctrine.orm.entity_manager'